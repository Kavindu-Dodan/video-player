<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <title>MainPage</title>
    <link rel="stylesheet" href="css/bootstrap.min.css">
</head>
<body>

        <h3>VIDEO tag and MediaSource API</h3>

<div class="container">

    <video  height="360" id="player" controls>
    </video>

</div>

<script src="js/jquery-3.3.1.slim.min.js"></script>
<script src="js/popper.min.js"></script>
<script src="js/bootstrap.min.js"></script>

<script>
var videoPlayer = document.getElementById('player');
var mediaSource = new MediaSource;

var mime = 'video/webm; codecs="vorbis, vp8"';

load_videos();


async function load_videos(){
    var vArray = []

    vArray.push(await get_video_chunk("http://localhost:9090/server/video?id=c1.webm"));
    vArray.push(await get_video_chunk("http://localhost:9090/server/video?id=c2.webm"));
    vArray.push(await get_video_chunk("http://localhost:9090/server/video?id=c3.webm"));

    videoPlayer.src = URL.createObjectURL(mediaSource);

    mediaSource.addEventListener('sourceopen', 
        function(){
            if(MediaSource.isTypeSupported(mime)){
                var sourceBuffer = mediaSource.addSourceBuffer(mime);
                sourceBuffer.mode = 'sequence';
                var index = 0;
                sourceBuffer.addEventListener('updateend', function () {
                    index++;
                    if(index > 2){
                        sourceBuffer.onupdateend = null;
                        mediaSource.endOfStream();
                        return;
                    }
                    // `chunk.mediaDuration` is `.duration` of media retrieved from `loadedmetadata` event
                    sourceBuffer.timestampOffset =  sourceBuffer.timestampOffset + 4.8;
                    // read next `File` object
                    sourceBuffer.appendBuffer(vArray[index]);
                });
                sourceBuffer.appendBuffer(vArray[index]);
            }
        }
    );
}



function get_video_chunk(url){
    return new Promise(function(resolve, reject){
        var httpRequest = new XMLHttpRequest();
        httpRequest.open("GET", url);
        httpRequest.responseType = "arraybuffer";

        httpRequest.onload = function() {
          resolve(httpRequest.response);
        };

        httpRequest.onerror = reject;
        httpRequest.send();
    });
}
</script>
</body>
</html>