<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <title>MainPage</title>
    <link rel="stylesheet" href="css/bootstrap.min.css">
</head>

<body>

    <h3>VIDEO tag and MediaSource API</h3>

    <div class="container">
        <video height="360" id="player" controls>
        </video>

    </div>

    <script src="js/jquery-3.3.1.slim.min.js"></script>
    <script src="js/popper.min.js"></script>
    <script src="js/bootstrap.min.js"></script>

    <script>
        var videoPlayer = document.getElementById('player');
        var mediaSource = new MediaSource;

        var mime = 'video/webm; codecs="vorbis, vp8"';
        var base = "http://localhost:9090/server/video";

        var id = "bunny"
        var segments = 7

        videoPlayer.src = URL.createObjectURL(mediaSource);
        mediaSource.addEventListener('sourceopen', player);

        async function player() {
            if (MediaSource.isTypeSupported(mime)) {
                var sourceBuffer = mediaSource.addSourceBuffer(mime);
                sourceBuffer.mode = 'sequence';
                
                var index = 0;
                sourceBuffer.addEventListener('updateend', async function () {
                    index++;
                    if (index >= segments) {
                        sourceBuffer.onupdateend = null;
                        //mediaSource.endOfStream();
                        return;
                    }
                    var chunk = await get_video_chunk(url_create(base, id , index));
                    sourceBuffer.appendBuffer(chunk);
                });
                var chunk = await get_video_chunk(url_create(base, id , index));
                sourceBuffer.appendBuffer(chunk);
            }
        }

        function url_create(base, id , segment){
            return base +"?" + "id=" + id + "&segment="+ segment
        }

        function get_video_chunk(url) {
            return new Promise(function (resolve, reject) {
                var httpRequest = new XMLHttpRequest();
                httpRequest.open("GET", url);
                httpRequest.responseType = "arraybuffer";

                httpRequest.onload = function () {
                    resolve(httpRequest.response);
                };

                httpRequest.onerror = reject;
                httpRequest.send();
            });
        }
    </script>
</body>

</html>